<%# Constructs static method `makeDefault()` for struct initialization by default values. -%>
<%# NOTE: If you want to add additional default value mapping, please edit `AutoDefaultValue.extension.swift`. -%>
<%- includeFile("AutoDefaultValue.extension.swift") -%>
<%- includeFile("AutoDefaultValue.swift") -%>
<%_ for statement in argument.importStatements { -%>
    <%_ %><%= statement %>
<%_ } -%>

<% for type in types.all.filter({ $0.hasAnnotationOrImplements(identifier) }) { -%>
    <%_ if type.hasAnnotationOrImplements(publicIdentifier) { -%>
        <%_ %>public extension <%= type.name %> {
    <%_ } else { -%>
        <%_ %>extension <%= type.name %> {
    <%_ } -%>
    <%_ %>    static func makeDefault(
    <%_ if let initializer = type.initializers.first(where: { $0.annotations.keys.contains(initializerIdentifier) }) { -%>
        <%_ for (index, variable) in initializer.parameters.enumerated() { -%>
        <%_ %>        <%= variable.name %>: <%= variable.absoluteTypeName %> = <%= defaultValue(from: variable, identifiedBy: identifier) %><% if index < type.storedVariables.count - 1 { %>,<% } %>
        <%_ } -%>
        <%_ %>    ) -> Self {
        <%_ %>        return <%= initializer.throws ? "try!" : "" %> .init(
                      <%_ for (index, variable) in initializer.parameters.enumerated() { -%>
        <%_ %>            <%= variable.name %>: <%= variable.name %><%_ if index < type.storedVariables.count - 1 { -%>,<% } %>
                      <%_ } -%>
        <%_ %>        )<%= initializer.isFailableInitializer ? "!" : "" %>
    <%_ } else { -%>
        <%_ for (index, variable) in type.storedVariables.enumerated() { -%>
        <%_ %>        <%= variable.name %>: <%= variable.absoluteTypeName %> = <%= defaultValue(from: variable, identifiedBy: identifier) %><% if index < type.storedVariables.count - 1 { %>,<% } %>
        <%_ } -%>
        <%_ %>    ) -> Self {
        <%_ %>        return .init(
                      <%_ for (index, variable) in type.storedVariables.enumerated() { -%>
        <%_ %>            <%= variable.name %>: <%= variable.name %><%_ if index < type.storedVariables.count - 1 { -%>,<% } %>
                      <%_ } -%>
        <%_ %>        )
    <%_ } -%>
    <%_ %>    }
    <%_ %>}
    <%_ %>
<%_ } -%>
